"""delete cascade

Revision ID: aec009816870
Revises: 95c7d27796fb
Create Date: 2025-07-23 16:15:10.604677

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "aec009816870"
down_revision: Union[str, None] = "95c7d27796fb"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_user_lessons_created_at"), table_name="user_lessons")
    op.drop_index(op.f("ix_user_lessons_id"), table_name="user_lessons")
    op.drop_index(op.f("ix_user_lessons_updated_at"), table_name="user_lessons")
    op.drop_table("user_lessons")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_lessons",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("lesson_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("is_completed", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("progress", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "last_section_index", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "completed_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["lesson_id"], ["lessons.id"], name=op.f("user_lessons_lesson_id_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("user_lessons_user_id_fkey")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("user_lessons_pkey")),
    )
    op.create_index(
        op.f("ix_user_lessons_updated_at"), "user_lessons", ["updated_at"], unique=False
    )
    op.create_index(op.f("ix_user_lessons_id"), "user_lessons", ["id"], unique=False)
    op.create_index(
        op.f("ix_user_lessons_created_at"), "user_lessons", ["created_at"], unique=False
    )
    # ### end Alembic commands ###
