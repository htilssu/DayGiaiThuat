"""change_test_session_id_to_uuid

Revision ID: 7cc189e07100
Revises: 5499f516b9e9
Create Date: 2025-06-27 12:25:22.553530

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "7cc189e07100"
down_revision: Union[str, None] = "5499f516b9e9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Vì dữ liệu test sessions thường là temporary, ta có thể xóa dữ liệu cũ
    # và tạo lại table với UUID ID
    op.drop_table("test_sessions")

    # Recreate table with UUID ID
    op.create_table(
        "test_sessions",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("test_id", sa.Integer(), nullable=False),
        sa.Column("start_time", sa.DateTime(), nullable=False),
        sa.Column("end_time", sa.DateTime(), nullable=True),
        sa.Column("last_activity", sa.DateTime(), nullable=False),
        sa.Column("time_remaining_seconds", sa.Integer(), nullable=False),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("is_submitted", sa.Boolean(), nullable=False),
        sa.Column("current_question_index", sa.Integer(), nullable=False),
        sa.Column("answers", sa.JSON(), nullable=False),
        sa.Column("score", sa.Integer(), nullable=True),
        sa.Column("correct_answers", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["test_id"],
            ["tests.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_test_sessions_id"), "test_sessions", ["id"], unique=False)
    op.create_index(
        op.f("ix_test_sessions_last_activity"),
        "test_sessions",
        ["last_activity"],
        unique=False,
    )
    op.create_index(
        op.f("ix_test_sessions_start_time"),
        "test_sessions",
        ["start_time"],
        unique=False,
    )
    op.create_index(
        op.f("ix_test_sessions_user_id"), "test_sessions", ["user_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_test_sessions_user_id"), table_name="test_sessions")
    op.drop_index(op.f("ix_test_sessions_start_time"), table_name="test_sessions")
    op.drop_index(op.f("ix_test_sessions_last_activity"), table_name="test_sessions")
    op.drop_index(op.f("ix_test_sessions_id"), table_name="test_sessions")
    op.drop_table("test_sessions")

    # Recreate table with integer ID
    op.create_table(
        "test_sessions",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("test_id", sa.Integer(), nullable=False),
        sa.Column("start_time", sa.DateTime(), nullable=False),
        sa.Column("end_time", sa.DateTime(), nullable=True),
        sa.Column("last_activity", sa.DateTime(), nullable=False),
        sa.Column("time_remaining_seconds", sa.Integer(), nullable=False),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("is_submitted", sa.Boolean(), nullable=False),
        sa.Column("current_question_index", sa.Integer(), nullable=False),
        sa.Column("answers", sa.JSON(), nullable=False),
        sa.Column("score", sa.Integer(), nullable=True),
        sa.Column("correct_answers", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["test_id"],
            ["tests.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_test_sessions_id"), "test_sessions", ["id"], unique=False)
    op.create_index(
        op.f("ix_test_sessions_last_activity"),
        "test_sessions",
        ["last_activity"],
        unique=False,
    )
    op.create_index(
        op.f("ix_test_sessions_start_time"),
        "test_sessions",
        ["start_time"],
        unique=False,
    )
    op.create_index(
        op.f("ix_test_sessions_user_id"), "test_sessions", ["user_id"], unique=False
    )
    # ### end Alembic commands ###
