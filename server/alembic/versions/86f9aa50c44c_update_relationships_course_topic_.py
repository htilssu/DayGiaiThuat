"""update_relationships_course_topic_lesson_exercise

Revision ID: 86f9aa50c44c
Revises: cae90bec1823
Create Date: 2025-06-27 09:48:12.597800

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '86f9aa50c44c'
down_revision: Union[str, None] = 'cae90bec1823'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('exercises', sa.Column('lesson_id', sa.Integer(), nullable=False))
    op.create_unique_constraint(None, 'exercises', ['lesson_id'])
    op.drop_constraint('exercises_topic_id_fkey', 'exercises', type_='foreignkey')
    op.create_foreign_key(None, 'exercises', 'lessons', ['lesson_id'], ['id'])
    op.drop_column('exercises', 'topic_id')
    
    # Add course_id as nullable first
    op.add_column('topics', sa.Column('course_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'topics', 'courses', ['course_id'], ['id'])
    
    # Create a default course if none exists
    connection = op.get_bind()
    result = connection.execute(sa.text("SELECT id FROM courses LIMIT 1"))
    course_id = result.scalar()
    
    if course_id is None:
        # Create a default course
        connection.execute(sa.text("""
            INSERT INTO courses (title, description, level, duration, price, 
            is_published, tags, requirements, what_you_will_learn, learning_path)
            VALUES ('Default Course', 'Default course for existing topics', 
            'Beginner', 0, 0.0, false, '', null, null, null)
        """))
        result = connection.execute(
            sa.text("SELECT id FROM courses WHERE title = 'Default Course'")
        )
        course_id = result.scalar()
    
    # Update existing topics to use the default course
    connection.execute(sa.text(f"UPDATE topics SET course_id = {course_id} WHERE course_id IS NULL"))
    
    # Now make course_id non-nullable
    op.alter_column('topics', 'course_id', nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('topics', 'course_id', nullable=True)
    op.drop_constraint(None, 'topics', type_='foreignkey')
    op.drop_column('topics', 'course_id')
    op.add_column('exercises', sa.Column('topic_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'exercises', type_='foreignkey')
    op.create_foreign_key('exercises_topic_id_fkey', 'exercises', 'topics', ['topic_id'], ['id'])
    op.drop_constraint(None, 'exercises', type_='unique')
    op.drop_column('exercises', 'lesson_id')
    # ### end Alembic commands ###
