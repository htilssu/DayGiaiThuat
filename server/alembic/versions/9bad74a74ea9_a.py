"""a

Revision ID: 9bad74a74ea9
Revises: 9f9046791cc3
Create Date: 2025-08-24 17:18:03.284299

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9bad74a74ea9'
down_revision: Union[str, None] = '9f9046791cc3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_lessons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('last_viewed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_lessons_created_at'), 'user_lessons', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_lessons_id'), 'user_lessons', ['id'], unique=False)
    op.create_index(op.f('ix_user_lessons_lesson_id'), 'user_lessons', ['lesson_id'], unique=False)
    op.create_index(op.f('ix_user_lessons_updated_at'), 'user_lessons', ['updated_at'], unique=False)
    op.create_index(op.f('ix_user_lessons_user_id'), 'user_lessons', ['user_id'], unique=False)
    op.drop_index(op.f('ix_user_course_progress_created_at'), table_name='user_course_progress')
    op.drop_index(op.f('ix_user_course_progress_id'), table_name='user_course_progress')
    op.drop_index(op.f('ix_user_course_progress_lesson_id'), table_name='user_course_progress')
    op.drop_index(op.f('ix_user_course_progress_status'), table_name='user_course_progress')
    op.drop_index(op.f('ix_user_course_progress_topic_id'), table_name='user_course_progress')
    op.drop_index(op.f('ix_user_course_progress_updated_at'), table_name='user_course_progress')
    op.drop_index(op.f('ix_user_course_progress_user_course_id'), table_name='user_course_progress')
    op.drop_table('user_course_progress')
    op.drop_index(op.f('ix_lesson_generation_states_created_at'), table_name='lesson_generation_states')
    op.drop_index(op.f('ix_lesson_generation_states_id'), table_name='lesson_generation_states')
    op.drop_index(op.f('ix_lesson_generation_states_session_id'), table_name='lesson_generation_states')
    op.drop_index(op.f('ix_lesson_generation_states_updated_at'), table_name='lesson_generation_states')
    op.drop_table('lesson_generation_states')
    op.create_index(op.f('ix_user_activities_created_at'), 'user_activities', ['created_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_activities_created_at'), table_name='user_activities')
    op.create_table('lesson_generation_states',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('topic_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('lesson_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('request_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], name=op.f('lesson_generation_states_lesson_id_fkey')),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], name=op.f('lesson_generation_states_topic_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('lesson_generation_states_pkey'))
    )
    op.create_index(op.f('ix_lesson_generation_states_updated_at'), 'lesson_generation_states', ['updated_at'], unique=False)
    op.create_index(op.f('ix_lesson_generation_states_session_id'), 'lesson_generation_states', ['session_id'], unique=True)
    op.create_index(op.f('ix_lesson_generation_states_id'), 'lesson_generation_states', ['id'], unique=False)
    op.create_index(op.f('ix_lesson_generation_states_created_at'), 'lesson_generation_states', ['created_at'], unique=False)
    op.create_table('user_course_progress',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_course_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('topic_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('lesson_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('NOT_STARTED', 'IN_PROGRESS', 'COMPLETED', name='progressstatus'), autoincrement=False, nullable=False),
    sa.Column('last_viewed_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('completed_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], name=op.f('user_course_progress_lesson_id_fkey')),
    sa.ForeignKeyConstraint(['user_course_id'], ['user_courses.id'], name=op.f('user_course_progress_user_course_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('user_course_progress_pkey'))
    )
    op.create_index(op.f('ix_user_course_progress_user_course_id'), 'user_course_progress', ['user_course_id'], unique=False)
    op.create_index(op.f('ix_user_course_progress_updated_at'), 'user_course_progress', ['updated_at'], unique=False)
    op.create_index(op.f('ix_user_course_progress_topic_id'), 'user_course_progress', ['topic_id'], unique=False)
    op.create_index(op.f('ix_user_course_progress_status'), 'user_course_progress', ['status'], unique=False)
    op.create_index(op.f('ix_user_course_progress_lesson_id'), 'user_course_progress', ['lesson_id'], unique=False)
    op.create_index(op.f('ix_user_course_progress_id'), 'user_course_progress', ['id'], unique=False)
    op.create_index(op.f('ix_user_course_progress_created_at'), 'user_course_progress', ['created_at'], unique=False)
    op.drop_index(op.f('ix_user_lessons_user_id'), table_name='user_lessons')
    op.drop_index(op.f('ix_user_lessons_updated_at'), table_name='user_lessons')
    op.drop_index(op.f('ix_user_lessons_lesson_id'), table_name='user_lessons')
    op.drop_index(op.f('ix_user_lessons_id'), table_name='user_lessons')
    op.drop_index(op.f('ix_user_lessons_created_at'), table_name='user_lessons')
    op.drop_table('user_lessons')
    # ### end Alembic commands ###
