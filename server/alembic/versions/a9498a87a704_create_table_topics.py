"""create_table_topics

Revision ID: a9498a87a704
Revises: b1f8ec5b2025
Create Date: 2025-06-07 01:29:54.697621

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a9498a87a704'
down_revision: Union[str, None] = 'b1f8ec5b2025'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('topics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_topics_description'), 'topics', ['description'], unique=False)
    op.create_index(op.f('ix_topics_id'), 'topics', ['id'], unique=False)
    op.create_index(op.f('ix_topics_name'), 'topics', ['name'], unique=False)
    op.create_table('exercises',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('difficulty', sa.String(), nullable=False),
    sa.Column('constraint', sa.String(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('sets', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('learning_paths',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('path', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_learning_paths_id'), 'learning_paths', ['id'], unique=False)
    op.create_index(op.f('ix_learning_paths_name'), 'learning_paths', ['name'], unique=False)
    op.alter_column('courses', 'level',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('courses', 'duration',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('courses', 'price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('courses', 'is_published',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('courses', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('courses', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('courses', 'tags',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('learning_progress', 'progress_percent',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('learning_progress', 'is_completed',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('learning_progress', 'favorite',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('learning_progress', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('learning_progress', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('learning_progress', 'completed_lessons',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=False)
    op.alter_column('learning_progress', 'quiz_scores',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=False)
    op.alter_column('user_states', 'last_active',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('user_states', 'streak_count',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('user_states', 'total_points',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('user_states', 'level',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('user_states', 'xp_to_next_level',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('user_states', 'daily_goal',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('user_states', 'daily_progress',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('user_states', 'completed_exercises',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('user_states', 'completed_courses',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('user_states', 'problems_solved',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('user_states', 'algorithms_progress',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('user_states', 'data_structures_progress',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('user_states', 'dynamic_programming_progress',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('user_states', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('user_states', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_column('user_states', 'preferences')
    op.drop_column('user_states', 'notifications')
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.add_column('user_states', sa.Column('notifications', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('user_states', sa.Column('preferences', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.alter_column('user_states', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('user_states', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('user_states', 'dynamic_programming_progress',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('user_states', 'data_structures_progress',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('user_states', 'algorithms_progress',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('user_states', 'problems_solved',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('user_states', 'completed_courses',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('user_states', 'completed_exercises',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('user_states', 'daily_progress',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('user_states', 'daily_goal',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('user_states', 'xp_to_next_level',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('user_states', 'level',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('user_states', 'total_points',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('user_states', 'streak_count',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('user_states', 'last_active',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('learning_progress', 'quiz_scores',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    op.alter_column('learning_progress', 'completed_lessons',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    op.alter_column('learning_progress', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('learning_progress', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('learning_progress', 'favorite',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('learning_progress', 'is_completed',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('learning_progress', 'progress_percent',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('courses', 'tags',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('courses', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('courses', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('courses', 'is_published',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('courses', 'price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('courses', 'duration',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('courses', 'level',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.drop_index(op.f('ix_learning_paths_name'), table_name='learning_paths')
    op.drop_index(op.f('ix_learning_paths_id'), table_name='learning_paths')
    op.drop_table('learning_paths')
    op.drop_table('exercises')
    op.drop_index(op.f('ix_topics_name'), table_name='topics')
    op.drop_index(op.f('ix_topics_id'), table_name='topics')
    op.drop_index(op.f('ix_topics_description'), table_name='topics')
    op.drop_table('topics')
    # ### end Alembic commands ###
