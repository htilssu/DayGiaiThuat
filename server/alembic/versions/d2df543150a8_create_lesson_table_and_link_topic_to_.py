"""create lesson table and link topic to user

Revision ID: d2df543150a8
Revises: a70a2faa176f
Create Date: 2025-06-17 19:39:01.992015

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd2df543150a8'
down_revision: Union[str, None] = 'a70a2faa176f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('lessons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('external_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('next_lesson_id', sa.String(), nullable=True),
    sa.Column('prev_lesson_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lessons_description'), 'lessons', ['description'], unique=False)
    op.create_index(op.f('ix_lessons_external_id'), 'lessons', ['external_id'], unique=True)
    op.create_index(op.f('ix_lessons_id'), 'lessons', ['id'], unique=False)
    op.create_index(op.f('ix_lessons_title'), 'lessons', ['title'], unique=False)
    op.create_table('lesson_sections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('options', sa.JSON(), nullable=True),
    sa.Column('answer', sa.Integer(), nullable=True),
    sa.Column('explanation', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lesson_sections_id'), 'lesson_sections', ['id'], unique=False)
    op.create_index(op.f('ix_lesson_sections_type'), 'lesson_sections', ['type'], unique=False)
    op.create_table('user_lessons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('progress', sa.Integer(), nullable=False),
    sa.Column('last_section_index', sa.Integer(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_lessons_id'), 'user_lessons', ['id'], unique=False)
    op.drop_index('ix_learning_progresses_id', table_name='learning_progresses')
    op.drop_table('learning_progresses')
    op.add_column('topics', sa.Column('external_id', sa.String(), nullable=True))
    op.add_column('topics', sa.Column('prerequisites', sa.ARRAY(sa.String()), nullable=True))
    op.drop_index('ix_topics_description', table_name='topics')
    op.create_index(op.f('ix_topics_external_id'), 'topics', ['external_id'], unique=True)
    op.drop_column('user_states', 'data_structures_progress')
    op.drop_column('user_states', 'algorithms_progress')
    op.drop_column('user_states', 'dynamic_programming_progress')
    op.add_column('users', sa.Column('full_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('avatar', sa.String(), nullable=True))
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('users', 'avatar_url')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('avatar_url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('users', 'avatar')
    op.drop_column('users', 'full_name')
    op.add_column('user_states', sa.Column('dynamic_programming_progress', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('user_states', sa.Column('algorithms_progress', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('user_states', sa.Column('data_structures_progress', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_topics_external_id'), table_name='topics')
    op.create_index('ix_topics_description', 'topics', ['description'], unique=False)
    op.drop_column('topics', 'prerequisites')
    op.drop_column('topics', 'external_id')
    op.create_table('learning_progresses',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('course_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('progress_percent', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('last_accessed', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_completed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('completion_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('favorite', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('completed_lessons', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('quiz_scores', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name='learning_progresses_course_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='learning_progresses_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='learning_progresses_pkey')
    )
    op.create_index('ix_learning_progresses_id', 'learning_progresses', ['id'], unique=False)
    op.drop_index(op.f('ix_user_lessons_id'), table_name='user_lessons')
    op.drop_table('user_lessons')
    op.drop_index(op.f('ix_lesson_sections_type'), table_name='lesson_sections')
    op.drop_index(op.f('ix_lesson_sections_id'), table_name='lesson_sections')
    op.drop_table('lesson_sections')
    op.drop_index(op.f('ix_lessons_title'), table_name='lessons')
    op.drop_index(op.f('ix_lessons_id'), table_name='lessons')
    op.drop_index(op.f('ix_lessons_external_id'), table_name='lessons')
    op.drop_index(op.f('ix_lessons_description'), table_name='lessons')
    op.drop_table('lessons')
    # ### end Alembic commands ###
