from fastapi import FastAPI, HTTPException
from fastapi.middleware.cors import CORSMiddleware
import sqlalchemy.exc
from fastapi.openapi.docs import (
    get_redoc_html,
    get_swagger_ui_html,
    get_swagger_ui_oauth2_redirect_html,
)
from fastapi.staticfiles import StaticFiles

from app.database.database import engine, Base
from app.routers import auth
from app.core.config import settings

# Kh·ªüi t·∫°o FastAPI app
app = FastAPI(
    title=settings.PROJECT_NAME,
    description="""
    üöÄ API h·ªá th·ªëng x√°c th·ª±c v·ªõi FastAPI

    ## T√≠nh nƒÉng

    * **ƒêƒÉng k√Ω** - T·∫°o t√†i kho·∫£n m·ªõi
    * **ƒêƒÉng nh·∫≠p** - X√°c th·ª±c v√† l·∫•y token
    * **Qu·∫£n l√Ω profile** - Xem v√† c·∫≠p nh·∫≠t th√¥ng tin c√° nh√¢n

    ## T√†i li·ªáu API

    * **/docs** - Swagger UI (hi·ªán t·∫°i)
    * **/redoc** - ReDoc UI
    """,
    version="1.0.0",
    contact={
        "name": "AI Agent Gi·∫£i Thu·∫≠t Team",
        "url": "https://github.com/yourusername/your-repo",
        "email": "your-email@example.com",
    },
    license_info={
        "name": "MIT License",
        "url": "https://opensource.org/licenses/MIT",
    },
    openapi_tags=[
        {
            "name": "authentication",
            "description": "C√°c API li√™n quan ƒë·∫øn x√°c th·ª±c ng∆∞·ªùi d√πng",
        },
        {
            "name": "users",
            "description": "C√°c API li√™n quan ƒë·∫øn qu·∫£n l√Ω ng∆∞·ªùi d√πng",
        },
    ],
    docs_url=None,
    redoc_url=None,
)

# Mount static files
app.mount("/static", StaticFiles(directory="static"), name="static")

# Custom Swagger UI v·ªõi theme v√† c√°c t√πy ch·ªânh
@app.get("/docs", include_in_schema=False)
async def custom_swagger_ui_html():
    return get_swagger_ui_html(
        openapi_url=app.openapi_url,
        title=f"{settings.PROJECT_NAME} - Swagger UI",
        oauth2_redirect_url=app.swagger_ui_oauth2_redirect_url,
        swagger_js_url="https://cdn.jsdelivr.net/npm/swagger-ui-dist@5.9.0/swagger-ui-bundle.js",
        swagger_css_url="https://cdn.jsdelivr.net/npm/swagger-ui-dist@5.9.0/swagger-ui.css",
        swagger_favicon_url="https://fastapi.tiangolo.com/img/favicon.png",
    )

@app.get("/redoc", include_in_schema=False)
async def redoc_html():
    return get_redoc_html(
        openapi_url=app.openapi_url,
        title=f"{settings.PROJECT_NAME} - ReDoc",
        redoc_js_url="https://cdn.jsdelivr.net/npm/redoc@2.0.0/bundles/redoc.standalone.js",
        redoc_favicon_url="https://fastapi.tiangolo.com/img/favicon.png",
    )

@app.get("/docs/oauth2-redirect", include_in_schema=False)
async def swagger_ui_redirect():
    return get_swagger_ui_oauth2_redirect_html()

# C·∫•u h√¨nh CORS
app.add_middleware(
    CORSMiddleware,
    allow_origins=settings.BACKEND_CORS_ORIGINS,
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# Th√™m router
app.include_router(auth.router, prefix=settings.API_V1_STR)

# T·∫°o database tables
try:
    Base.metadata.create_all(bind=engine)
    print("Database connected successfully!")
except sqlalchemy.exc.OperationalError as e:
    print(f"Could not connect to database: {e}")
    # Kh√¥ng raise exception ·ªü ƒë√¢y ƒë·ªÉ ·ª©ng d·ª•ng v·∫´n kh·ªüi ƒë·ªông ƒë∆∞·ª£c
    # ngay c·∫£ khi kh√¥ng k·∫øt n·ªëi ƒë∆∞·ª£c database

@app.get("/", tags=["root"])
async def root():
    """
    Root endpoint
    
    Returns:
        dict: Th√¥ng tin welcome
    """
    return {
        "message": f"Welcome to {settings.PROJECT_NAME}",
        "docs": {
            "swagger": "/docs",
            "redoc": "/redoc"
        }
    }

@app.get("/hello/{name}", tags=["examples"])
async def say_hello(name: str):
    """
    Ch√†o m·ªôt ng∆∞·ªùi d√πng
    
    Args:
        name (str): T√™n ng∆∞·ªùi d√πng
        
    Returns:
        dict: L·ªùi ch√†o
    """
    return {"message": f"Hello {name}"}
