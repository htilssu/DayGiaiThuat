import { Metadata } from "next";
import { notFound } from "next/navigation";
import Link from "next/link";
import { sampleLessons } from "@/components/pages/learn/sampleLessonData";

interface TopicPageProps {
    params: {
        topicId: string;
    };
}

// D·ªØ li·ªáu m·∫´u cho c√°c ch·ªß ƒë·ªÅ
const topicsData = {
    "algorithms-basics": {
        title: "C∆° b·∫£n v·ªÅ gi·∫£i thu·∫≠t",
        description: "T√¨m hi·ªÉu v·ªÅ c√°c kh√°i ni·ªám c∆° b·∫£n, ƒë·ªô ph·ª©c t·∫°p v√† c√°ch ph√¢n t√≠ch gi·∫£i thu·∫≠t",
        color: "primary",
        icon: "üìä"
    },
    "data-structures": {
        title: "C·∫•u tr√∫c d·ªØ li·ªáu",
        description: "H·ªçc v·ªÅ c√°c c·∫•u tr√∫c d·ªØ li·ªáu ph·ªï bi·∫øn nh∆∞ m·∫£ng, danh s√°ch li√™n k·∫øt, ngƒÉn x·∫øp, h√†ng ƒë·ª£i",
        color: "secondary",
        icon: "üß©"
    },
    "sorting-algorithms": {
        title: "Gi·∫£i thu·∫≠t s·∫Øp x·∫øp",
        description: "T√¨m hi·ªÉu v·ªÅ c√°c thu·∫≠t to√°n s·∫Øp x·∫øp nh∆∞ Bubble Sort, Quick Sort, Merge Sort v√† nhi·ªÅu thu·∫≠t to√°n kh√°c",
        color: "accent",
        icon: "üîÑ"
    }
};

// T·∫°o metadata ƒë·ªông d·ª±a tr√™n th√¥ng tin ch·ªß ƒë·ªÅ
export async function generateMetadata({ params }: TopicPageProps): Promise<Metadata> {
    const { topicId } = params;
    const topic = topicsData[topicId as keyof typeof topicsData];

    if (!topic) {
        return {
            title: "Kh√¥ng t√¨m th·∫•y ch·ªß ƒë·ªÅ | AI Agent Gi·∫£i Thu·∫≠t",
            description: "Ch·ªß ƒë·ªÅ kh√¥ng t·ªìn t·∫°i ho·∫∑c ƒë√£ b·ªã x√≥a",
        };
    }

    return {
        title: `${topic.title} | AI Agent Gi·∫£i Thu·∫≠t`,
        description: topic.description,
        authors: [{ name: "AI Agent Gi·∫£i Thu·∫≠t Team" }],
        keywords: ["gi·∫£i thu·∫≠t", "h·ªçc t·∫≠p", "l·∫≠p tr√¨nh", "ch·ªß ƒë·ªÅ", topic.title],
    };
}

export default function TopicPage({ params }: TopicPageProps) {
    const { topicId } = params;
    const topic = topicsData[topicId as keyof typeof topicsData];

    if (!topic) {
        notFound();
    }

    // L·∫•y danh s√°ch b√†i h·ªçc c·ªßa ch·ªß ƒë·ªÅ
    const topicLessons = sampleLessons[topicId] || {};
    const lessons = Object.values(topicLessons).sort((a, b) => parseInt(a.id) - parseInt(b.id));

    return (
        <div className="min-h-screen pb-20">
            <div className="container mx-auto px-4 py-8">
                {/* Header */}
                <div className="mb-10">
                    <Link href="/learn" className="text-primary hover:underline mb-2 inline-block">
                        ‚Üê Quay l·∫°i l·ªô tr√¨nh
                    </Link>
                    <div className="flex items-center gap-4 mb-4">
                        <div className={`w-16 h-16 rounded-full flex items-center justify-center bg-${topic.color} text-white text-2xl`}>
                            {topic.icon}
                        </div>
                        <div>
                            <h1 className="text-3xl md:text-4xl font-bold">{topic.title}</h1>
                            <p className="text-foreground/70">{topic.description}</p>
                        </div>
                    </div>
                </div>

                {/* Danh s√°ch b√†i h·ªçc */}
                <div className="max-w-3xl mx-auto">
                    <h2 className="text-2xl font-bold mb-6">C√°c b√†i h·ªçc trong ch·ªß ƒë·ªÅ n√†y</h2>

                    <div className="space-y-4">
                        {lessons.length > 0 ? (
                            lessons.map((lesson) => (
                                <Link
                                    key={lesson.id}
                                    href={`/topics/${topicId}/lessons/${lesson.id}`}
                                    className="block bg-white rounded-xl p-6 shadow-sm border border-foreground/10 hover:shadow-md transition-all"
                                >
                                    <div className="flex items-center gap-4">
                                        <div className={`w-10 h-10 rounded-full flex items-center justify-center bg-${topic.color} text-white font-bold`}>
                                            {lesson.id}
                                        </div>
                                        <div>
                                            <h3 className="text-xl font-semibold">{lesson.title}</h3>
                                            <p className="text-foreground/70">{lesson.description}</p>
                                        </div>
                                    </div>
                                </Link>
                            ))
                        ) : (
                            <div className="text-center py-10 bg-foreground/5 rounded-lg">
                                <p className="text-foreground/70">Ch∆∞a c√≥ b√†i h·ªçc n√†o trong ch·ªß ƒë·ªÅ n√†y</p>
                            </div>
                        )}
                    </div>
                </div>
            </div>
        </div>
    );
} 